@model Eventor.Models.AccessViewModel
@using Eventor.Helpers;

@{
    ViewBag.Title = "Access Page";
}

<div id="index">
<div id="dots">

    <div id="floating_box">

        <h1 id="logo"><a href="/"><span>E</span>ventor</a></h1>
        <ul id="navigator">
            <li class="first"><span class="button" id="expand">Sign up</span></li>
            <li><span class="button dark">New event without login</span></li>
        </ul>
        <hr>
                
        <div class="form_box" id="login_form">
            <div class="left bordered">

                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    if (Request.Form.AllKeys.Contains("access_login"))
                    {
                        @Html.ValidationSummary()
                    }

                    @Html.TextBoxFor(m => m.LoginModel.UserName, new { @class = "text_input", placeholder = "User name" })
                    @Html.ValidationMessageFor(m => m.LoginModel.UserName)
                    @Html.PasswordFor(m => m.LoginModel.Password, new { @class = "text_input", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.LoginModel.Password)
                    @Html.LabelFor(m => m.LoginModel.RememberMe)
                    @Html.CheckBoxFor(m => m.LoginModel.RememberMe)
                    
                    @Html.ActionLink("Lost password?", "ForgotPassword", new { }, new { @id = "lost_password" })
                    <input class="button right_btn" name ="access_login" type="submit" value="Log in">
                }
            </div>
            <div class="right">
                @using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" name="provider" value="Facebook" title="Log in using your Facebook account" class="button blue social" id="facebook_btn"><span>f</span>Log in with Facebook</button>
                    <button type="submit" name="provider" value="Google" title="Log in using your Google account" class="button red social" id="google_btn"><span>g</span>Log in with Google</button>
                }
            </div>
            <div class="clear"></div>
        </div>

        <div class="form_box" id="signup_form"> 
                     
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" } ))
            {
                <div class="left">

                    @Html.AntiForgeryToken()
                    @if (Request.Form.AllKeys.Contains("access_signup"))
                    {
                        @Html.ValidationSummary()
                    }

                    @Html.TextBoxFor(m => m.RegisterModel.Name, new { @class = "text_input", placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.Name)
                    @Html.TextBoxFor(m => m.RegisterModel.UserName, new { @class = "text_input", placeholder = "E-mail" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.UserName)
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.RegisterModel.iAgree)
                        @Html.ValidationMessageFor(m => m.RegisterModel.iAgree)
                        <label>I agree with <a href="#">Eventor's terms</a></label>
                    </div>                        
                </div>
                    
                <div class="right">

                    @Html.TextBoxFor(m => m.RegisterModel.Surname, new { @class = "text_input", placeholder = "Last Name"})
                    @Html.ValidationMessageFor(m => m.RegisterModel.Surname)
                    @Html.PasswordFor(m => m.RegisterModel.Password, new { @class = "text_input", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.Password)
                    @Html.PasswordFor(m => m.RegisterModel.ConfirmPassword, new { @class = "text_input", placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.ConfirmPassword)                        
                    <input name ="access_signup" class="button" type="submit" value="Sign up">

                </div>
                    
                <div class="clear"></div>
            }
        </div>
        <div class="form_box" id="external_signup_form">

            @using (Html.BeginForm("ExternalLoginConfirmation", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                <div class="left">

                    @Html.AntiForgeryToken()
                    @if (Request.Form.AllKeys.Contains("access_external"))
                    {
                        @Html.ValidationSummary()
                    }

                    @Html.TextBoxFor(m => m.ExternalSignupModel.Name, new { @class = "text_input", placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.ExternalSignupModel.Name)
                    @Html.TextBoxFor(m => m.ExternalSignupModel.UserName, new { @class = "text_input", placeholder = "E-mail", @readonly = true })
                    @Html.ValidationMessageFor(m => m.ExternalSignupModel.UserName)
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.ExternalSignupModel.iAgree)
                        @Html.ValidationMessageFor(m => m.ExternalSignupModel.iAgree)
                        <label>I agree with <a href="#">Eventor's terms</a></label>
                    </div>
                </div>

                <div class="right">
                    @Html.TextBoxFor(m => m.ExternalSignupModel.Surname, new { @class = "text_input", placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.ExternalSignupModel.Surname)
                    <input name ="access_external" class="button" type="submit" value="Sign up">
                </div>

                <div class="clear"></div>
            }

        </div>
    </div>
</div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    (function ($) {
        $.validator.unobtrusive.adapters.addBool("booleanrequired", "required");
    }(jQuery));

    $('document').ready(function ()
    {
        var action = '@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString()';
        switch (action)
        {
            case "ExternalLogin":
            case "ExternalLoginConfirmation":
                do_externalsignup();
                break;
            case "Register":
                do_signup();
                break;
            default:
                do_login();
                break;
        }
    })
    </script>
}
