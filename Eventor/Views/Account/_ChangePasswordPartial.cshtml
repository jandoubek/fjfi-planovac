@using Microsoft.AspNet.Identity

@model Eventor.Models.AccountManageViewModel

<div id="sect">
    <!--<p style="margin-bottom: 15px; margin-left: 25px">You're logged in as <strong>@User.Identity.GetUserName()</strong>.</p>-->
    <p style="margin-bottom: 15px; margin-left: 25px">You're logged in as <strong data-bind="text: UserAccountInfo().UserName"></strong>.</p>

    <p style="margin-left: 25px">First name: <strong data-bind="text: UserAccountInfo().Name"></strong></p>
    <p style="margin-left: 25px">Last name: <strong data-bind="text: UserAccountInfo().Surname"></strong></p>
    <p style="margin-left: 25px">Email: <strong data-bind="text: UserAccountInfo().Email"></strong></p>
</div>
<hr />
<div id="content">
    <strong data-bind="html: Pending"></strong>
        <span class="event_buttons">
            <span class="row-sm-2 row-md-10">
                <button style="margin-left: 25px;margin-bottom: 10px" class="button" data-toggle="modal" data-target="#personalInformationChangeModal">
                    Personal Information Change
                </button>
            </span>  
        </span>
        <span class="event_buttons">
            <span class="row-sm-2 row-md-10">
                <button style="margin-left: 25px" class="button" data-toggle="modal" data-target="#passwordChangeModal">
                    Password Change
                </button>
            </span>
        </span>
</div>
<hr />

<!-- Modal -->

<div class="modal fade" id="passwordChangeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Change Password</h4>
            </div>
            @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                <div class="modal-body">
                    <div>
                        @Html.AntiForgeryToken()
                        @if (Request.Form.AllKeys.Contains("savePasswordButton"))
                        {
                            @Html.ValidationSummary()
                        }
                        <div class="form-group">
                            @Html.LabelFor(m => m.ManageUserPasswordModel.OldPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10" style="width:25%">
                                @Html.PasswordFor(m => m.ManageUserPasswordModel.OldPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ManageUserPasswordModel.OldPassword)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ManageUserPasswordModel.NewPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10" style="width:25%">
                                @Html.PasswordFor(m => m.ManageUserPasswordModel.NewPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ManageUserPasswordModel.NewPassword)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ManageUserPasswordModel.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10" style="width:25%">
                                @Html.PasswordFor(m => m.ManageUserPasswordModel.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ManageUserPasswordModel.ConfirmPassword)
                            </div>
                        </div>

                        <br />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="button blue" data-dismiss="modal" style="float:right;">Close</button>
                    <div class="form-group">
                        <button name="savePasswordButton" type="submit" value="Save New Password" class="button green">Save New Password</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



<!-- Modal -->
<div data-bind="with: EditAccountInfo" class="modal fade" id="personalInformationChangeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Change Personal Information</h4>
            </div>
            @using (Html.BeginForm("EditAccount", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            <div class="modal-body">
                <div>
                    @Html.AntiForgeryToken()
                    @if (Request.Form.AllKeys.Contains("editButton"))
                    {
                        @Html.ValidationSummary()
                    }
                    <div>
                        @Html.TextBoxFor(m => m.ManageUserInfoModel.UserName, new { @class = "text_input", placeholder = "User name", data_bind = "value: UserAccountInfo().UserName" })
                        @Html.ValidationMessageFor(m => m.ManageUserInfoModel.UserName)
                    </div>
                    <div>
                        @Html.TextBoxFor(m => m.ManageUserInfoModel.Name, new { @class = "text_input", placeholder = "First Name", data_bind = "value: UserAccountInfo().Name" })
                        @Html.ValidationMessageFor(m => m.ManageUserInfoModel.Name)
                        <!-- <input data-bind="value: UName" type="text" title="Name" class="text_input" placeholder="Enter New Name" /> -->
                    </div>
                    <div>
                        @Html.TextBoxFor(m => m.ManageUserInfoModel.Surname, new { @class = "text_input", placeholder = "Last name", data_bind = "value: UserAccountInfo().Surname" })
                        @Html.ValidationMessageFor(m => m.ManageUserInfoModel.Surname)
                        <!--<input data-bind="value: USurname" type="text" title="Surname" class="text_input" placeholder="Enter New Surname"/>-->
                    </div>
                    <div>
                        @Html.TextBoxFor(m => m.ManageUserInfoModel.Email, new { @class = "text_input", id = "cEmail", placeholder = "Email", data_bind = "value: UserAccountInfo().Email" })
                        @Html.ValidationMessageFor(m => m.ManageUserInfoModel.Email)
                        <!--<input data-bind="value: UEmail" type="text" title="Email" class="text_input" placeholder="Enter New Email"/>-->
                    </div>
                    <br />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="button blue" data-dismiss="modal" style="float:right;">Close</button>
                <div class="form-group">
                    <button name="editButton" type="submit" value="Save User Profile" class="button green">Save User Profile</button>
                </div>
            </div>
            }
        </div>
    </div>
</div>